import java.io.*;
 
class Test {
   
//The problem we would like you to solve deals with an array of integers. We want to rotate these integers
//to a specified number of positions to the left.
//If for example you have an array of integers [1,2,3,4,5,6,7] and we would like to rotate 2 positions to the
//left, the solution expected would be [3,4,5,6,7,1,2].

//Note: the solution should be able to handle a position value greater than the number of integers in the
//array. If, for example, we would like to rotate [1,2,3,4,5,6,7] 8 positions to left, it would produce the
//result [2,3,4,5,6,7,1]. Negative values for the positions to rotate will throw an error which the code
//example should handle gracefully.   
   
   
   

static void Rotate(int arr[], int k, int n)
{
   
    int temp[] = new int[n];
 
   
    int z = 0;
 
    
    for (int i = k; i < n; i++) {
        temp[z] = arr[i];
        z++;
    }
for (int i = 0; i < k; i++) {
        temp[z] = arr[i];
        z++;
    }
 
   
    for (int i = 0; i < n; i++) {
        arr[i] = temp[i];
    }
}
 

static void PrintTheArray(int arr[], int n)
{
    for (int i = 0; i < n; i++) {
        System.out.print(arr[i]+" ");
    }
}
    public static void main (String[] args) {
        int arr[] = { 1, 2, 3, 4, 5, 6, 7 };
        int N = arr.length;
	//For the Negative value use [ -2]	
        int k = 2;
 
      
        Rotate(arr, k, N);
        PrintTheArray(arr, N);
    }
    
}
